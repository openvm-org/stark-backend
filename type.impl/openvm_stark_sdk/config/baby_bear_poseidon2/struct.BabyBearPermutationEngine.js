(function() {
    var type_impls = Object.fromEntries([["openvm_stark_sdk",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StarkEngine%3CStarkConfig%3CTwoAdicFriPcs%3CMontyField31%3CBabyBearParameters%3E,+Radix2DitParallel%3CMontyField31%3CBabyBearParameters%3E%3E,+MerkleTreeMmcs%3C%3CMontyField31%3CBabyBearParameters%3E+as+Field%3E::Packing,+%3CMontyField31%3CBabyBearParameters%3E+as+Field%3E::Packing,+PaddingFreeSponge%3CP,+WIDTH,+RATE,+DIGEST_WIDTH%3E,+TruncatedPermutation%3CP,+2,+DIGEST_WIDTH,+WIDTH%3E,+DIGEST_WIDTH%3E,+ExtensionMmcs%3CMontyField31%3CBabyBearParameters%3E,+BinomialExtensionField%3CMontyField31%3CBabyBearParameters%3E,+4%3E,+MerkleTreeMmcs%3C%3CMontyField31%3CBabyBearParameters%3E+as+Field%3E::Packing,+%3CMontyField31%3CBabyBearParameters%3E+as+Field%3E::Packing,+PaddingFreeSponge%3CP,+WIDTH,+RATE,+DIGEST_WIDTH%3E,+TruncatedPermutation%3CP,+2,+DIGEST_WIDTH,+WIDTH%3E,+DIGEST_WIDTH%3E%3E%3E,+StarkLogUpPhase%3CMontyField31%3CBabyBearParameters%3E,+BinomialExtensionField%3CMontyField31%3CBabyBearParameters%3E,+4%3E,+DuplexChallenger%3CMontyField31%3CBabyBearParameters%3E,+P,+WIDTH,+RATE%3E%3E,+BinomialExtensionField%3CMontyField31%3CBabyBearParameters%3E,+4%3E,+DuplexChallenger%3CMontyField31%3CBabyBearParameters%3E,+P,+WIDTH,+RATE%3E%3E%3E-for-BabyBearPermutationEngine%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/openvm_stark_sdk/config/baby_bear_poseidon2.rs.html#70-83\">Source</a><a href=\"#impl-StarkEngine%3CStarkConfig%3CTwoAdicFriPcs%3CMontyField31%3CBabyBearParameters%3E,+Radix2DitParallel%3CMontyField31%3CBabyBearParameters%3E%3E,+MerkleTreeMmcs%3C%3CMontyField31%3CBabyBearParameters%3E+as+Field%3E::Packing,+%3CMontyField31%3CBabyBearParameters%3E+as+Field%3E::Packing,+PaddingFreeSponge%3CP,+WIDTH,+RATE,+DIGEST_WIDTH%3E,+TruncatedPermutation%3CP,+2,+DIGEST_WIDTH,+WIDTH%3E,+DIGEST_WIDTH%3E,+ExtensionMmcs%3CMontyField31%3CBabyBearParameters%3E,+BinomialExtensionField%3CMontyField31%3CBabyBearParameters%3E,+4%3E,+MerkleTreeMmcs%3C%3CMontyField31%3CBabyBearParameters%3E+as+Field%3E::Packing,+%3CMontyField31%3CBabyBearParameters%3E+as+Field%3E::Packing,+PaddingFreeSponge%3CP,+WIDTH,+RATE,+DIGEST_WIDTH%3E,+TruncatedPermutation%3CP,+2,+DIGEST_WIDTH,+WIDTH%3E,+DIGEST_WIDTH%3E%3E%3E,+StarkLogUpPhase%3CMontyField31%3CBabyBearParameters%3E,+BinomialExtensionField%3CMontyField31%3CBabyBearParameters%3E,+4%3E,+DuplexChallenger%3CMontyField31%3CBabyBearParameters%3E,+P,+WIDTH,+RATE%3E%3E,+BinomialExtensionField%3CMontyField31%3CBabyBearParameters%3E,+4%3E,+DuplexChallenger%3CMontyField31%3CBabyBearParameters%3E,+P,+WIDTH,+RATE%3E%3E%3E-for-BabyBearPermutationEngine%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"openvm_stark_sdk/engine/trait.StarkEngine.html\" title=\"trait openvm_stark_sdk::engine::StarkEngine\">StarkEngine</a>&lt;<a class=\"struct\" href=\"openvm_stark_backend/config/struct.StarkConfig.html\" title=\"struct openvm_stark_backend::config::StarkConfig\">StarkConfig</a>&lt;TwoAdicFriPcs&lt;MontyField31&lt;BabyBearParameters&gt;, Radix2DitParallel&lt;MontyField31&lt;BabyBearParameters&gt;&gt;, MerkleTreeMmcs&lt;&lt;MontyField31&lt;BabyBearParameters&gt; as Field&gt;::Packing, &lt;MontyField31&lt;BabyBearParameters&gt; as Field&gt;::Packing, PaddingFreeSponge&lt;P, WIDTH, RATE, DIGEST_WIDTH&gt;, TruncatedPermutation&lt;P, 2, DIGEST_WIDTH, WIDTH&gt;, DIGEST_WIDTH&gt;, ExtensionMmcs&lt;MontyField31&lt;BabyBearParameters&gt;, BinomialExtensionField&lt;MontyField31&lt;BabyBearParameters&gt;, 4&gt;, MerkleTreeMmcs&lt;&lt;MontyField31&lt;BabyBearParameters&gt; as Field&gt;::Packing, &lt;MontyField31&lt;BabyBearParameters&gt; as Field&gt;::Packing, PaddingFreeSponge&lt;P, WIDTH, RATE, DIGEST_WIDTH&gt;, TruncatedPermutation&lt;P, 2, DIGEST_WIDTH, WIDTH&gt;, DIGEST_WIDTH&gt;&gt;&gt;, <a class=\"struct\" href=\"openvm_stark_backend/interaction/stark_log_up/struct.StarkLogUpPhase.html\" title=\"struct openvm_stark_backend::interaction::stark_log_up::StarkLogUpPhase\">StarkLogUpPhase</a>&lt;MontyField31&lt;BabyBearParameters&gt;, BinomialExtensionField&lt;MontyField31&lt;BabyBearParameters&gt;, 4&gt;, DuplexChallenger&lt;MontyField31&lt;BabyBearParameters&gt;, P, WIDTH, RATE&gt;&gt;, BinomialExtensionField&lt;MontyField31&lt;BabyBearParameters&gt;, 4&gt;, DuplexChallenger&lt;MontyField31&lt;BabyBearParameters&gt;, P, WIDTH, RATE&gt;&gt;&gt; for <a class=\"struct\" href=\"openvm_stark_sdk/config/baby_bear_poseidon2/struct.BabyBearPermutationEngine.html\" title=\"struct openvm_stark_sdk::config::baby_bear_poseidon2::BabyBearPermutationEngine\">BabyBearPermutationEngine</a>&lt;P&gt;<div class=\"where\">where\n    P: CryptographicPermutation&lt;[BabyBear; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]&gt; + CryptographicPermutation&lt;[&lt;BabyBear as Field&gt;::Packing; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.config\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openvm_stark_sdk/config/baby_bear_poseidon2.rs.html#76-78\">Source</a><a href=\"#method.config\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"openvm_stark_sdk/engine/trait.StarkEngine.html#tymethod.config\" class=\"fn\">config</a>(&amp;self) -&gt; &amp;<a class=\"type\" href=\"openvm_stark_sdk/config/baby_bear_poseidon2/type.BabyBearPermutationConfig.html\" title=\"type openvm_stark_sdk::config::baby_bear_poseidon2::BabyBearPermutationConfig\">BabyBearPermutationConfig</a>&lt;P&gt;</h4></section></summary><div class='docblock'>Stark config</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_challenger\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openvm_stark_sdk/config/baby_bear_poseidon2.rs.html#80-82\">Source</a><a href=\"#method.new_challenger\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"openvm_stark_sdk/engine/trait.StarkEngine.html#tymethod.new_challenger\" class=\"fn\">new_challenger</a>(&amp;self) -&gt; <a class=\"type\" href=\"openvm_stark_sdk/config/baby_bear_poseidon2/type.Challenger.html\" title=\"type openvm_stark_sdk::config::baby_bear_poseidon2::Challenger\">Challenger</a>&lt;P&gt;</h4></section></summary><div class='docblock'>Creates a new challenger with a deterministic state.\nCreating new challenger for prover and verifier separately will result in\nthem having the same starting state.</div></details><section id=\"method.keygen_builder\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openvm_stark_backend/engine.rs.html#35\">Source</a><a href=\"#method.keygen_builder\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"openvm_stark_sdk/engine/trait.StarkEngine.html#method.keygen_builder\" class=\"fn\">keygen_builder</a>(&amp;self) -&gt; <a class=\"struct\" href=\"openvm_stark_backend/keygen/struct.MultiStarkKeygenBuilder.html\" title=\"struct openvm_stark_backend::keygen::MultiStarkKeygenBuilder\">MultiStarkKeygenBuilder</a>&lt;'_, SC&gt;</h4></section><section id=\"method.prover\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openvm_stark_backend/engine.rs.html#39\">Source</a><a href=\"#method.prover\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"openvm_stark_sdk/engine/trait.StarkEngine.html#method.prover\" class=\"fn\">prover</a>(&amp;self) -&gt; <a class=\"struct\" href=\"openvm_stark_backend/prover/struct.MultiTraceStarkProver.html\" title=\"struct openvm_stark_backend::prover::MultiTraceStarkProver\">MultiTraceStarkProver</a>&lt;'_, SC&gt;</h4></section><section id=\"method.verifier\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openvm_stark_backend/engine.rs.html#43\">Source</a><a href=\"#method.verifier\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"openvm_stark_sdk/engine/trait.StarkEngine.html#method.verifier\" class=\"fn\">verifier</a>(&amp;self) -&gt; <a class=\"struct\" href=\"openvm_stark_backend/verifier/struct.MultiTraceStarkVerifier.html\" title=\"struct openvm_stark_backend::verifier::MultiTraceStarkVerifier\">MultiTraceStarkVerifier</a>&lt;'_, SC&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_simple_test_impl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openvm_stark_backend/engine.rs.html#52-57\">Source</a><a href=\"#method.run_simple_test_impl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"openvm_stark_sdk/engine/trait.StarkEngine.html#method.run_simple_test_impl\" class=\"fn\">run_simple_test_impl</a>(\n    &amp;self,\n    chips: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;dyn <a class=\"trait\" href=\"openvm_stark_backend/rap/trait.AnyRap.html\" title=\"trait openvm_stark_backend::rap::AnyRap\">AnyRap</a>&lt;SC&gt;&gt;&gt;,\n    traces: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;DenseMatrix&lt;&lt;&lt;&lt;SC as <a class=\"trait\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html\" title=\"trait openvm_stark_backend::config::StarkGenericConfig\">StarkGenericConfig</a>&gt;::<a class=\"associatedtype\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html#associatedtype.Pcs\" title=\"type openvm_stark_backend::config::StarkGenericConfig::Pcs\">Pcs</a> as Pcs&lt;&lt;SC as <a class=\"trait\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html\" title=\"trait openvm_stark_backend::config::StarkGenericConfig\">StarkGenericConfig</a>&gt;::<a class=\"associatedtype\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html#associatedtype.Challenge\" title=\"type openvm_stark_backend::config::StarkGenericConfig::Challenge\">Challenge</a>, &lt;SC as <a class=\"trait\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html\" title=\"trait openvm_stark_backend::config::StarkGenericConfig\">StarkGenericConfig</a>&gt;::<a class=\"associatedtype\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html#associatedtype.Challenger\" title=\"type openvm_stark_backend::config::StarkGenericConfig::Challenger\">Challenger</a>&gt;&gt;::Domain as PolynomialSpace&gt;::Val&gt;&gt;,\n    public_values: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;&lt;&lt;SC as <a class=\"trait\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html\" title=\"trait openvm_stark_backend::config::StarkGenericConfig\">StarkGenericConfig</a>&gt;::<a class=\"associatedtype\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html#associatedtype.Pcs\" title=\"type openvm_stark_backend::config::StarkGenericConfig::Pcs\">Pcs</a> as Pcs&lt;&lt;SC as <a class=\"trait\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html\" title=\"trait openvm_stark_backend::config::StarkGenericConfig\">StarkGenericConfig</a>&gt;::<a class=\"associatedtype\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html#associatedtype.Challenge\" title=\"type openvm_stark_backend::config::StarkGenericConfig::Challenge\">Challenge</a>, &lt;SC as <a class=\"trait\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html\" title=\"trait openvm_stark_backend::config::StarkGenericConfig\">StarkGenericConfig</a>&gt;::<a class=\"associatedtype\" href=\"openvm_stark_backend/config/trait.StarkGenericConfig.html#associatedtype.Challenger\" title=\"type openvm_stark_backend::config::StarkGenericConfig::Challenger\">Challenger</a>&gt;&gt;::Domain as PolynomialSpace&gt;::Val&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"openvm_stark_backend/engine/struct.VerificationData.html\" title=\"struct openvm_stark_backend::engine::VerificationData\">VerificationData</a>&lt;SC&gt;, <a class=\"enum\" href=\"openvm_stark_backend/verifier/error/enum.VerificationError.html\" title=\"enum openvm_stark_backend::verifier::error::VerificationError\">VerificationError</a>&gt;</h4></section></summary><div class='docblock'>Runs a single end-to-end test for a given set of AIRs and traces.\nThis includes proving/verifying key generation, creating a proof, and verifying the proof.\nThis function should only be used on AIRs where the main trace is <strong>not</strong> partitioned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_test_impl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openvm_stark_backend/engine.rs.html#63-66\">Source</a><a href=\"#method.run_test_impl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"openvm_stark_sdk/engine/trait.StarkEngine.html#method.run_test_impl\" class=\"fn\">run_test_impl</a>(\n    &amp;self,\n    air_proof_inputs: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"openvm_stark_backend/prover/types/struct.AirProofInput.html\" title=\"struct openvm_stark_backend::prover::types::AirProofInput\">AirProofInput</a>&lt;SC&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"openvm_stark_backend/engine/struct.VerificationData.html\" title=\"struct openvm_stark_backend::engine::VerificationData\">VerificationData</a>&lt;SC&gt;, <a class=\"enum\" href=\"openvm_stark_backend/verifier/error/enum.VerificationError.html\" title=\"enum openvm_stark_backend::verifier::error::VerificationError\">VerificationError</a>&gt;</h4></section></summary><div class='docblock'>Runs a single end-to-end test for a given set of chips and traces partitions.\nThis includes proving/verifying key generation, creating a proof, and verifying the proof.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_up_keygen_builder\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openvm_stark_backend/engine.rs.html#80-84\">Source</a><a href=\"#method.set_up_keygen_builder\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"openvm_stark_sdk/engine/trait.StarkEngine.html#method.set_up_keygen_builder\" class=\"fn\">set_up_keygen_builder</a>(\n    &amp;self,\n    keygen_builder: &amp;mut <a class=\"struct\" href=\"openvm_stark_backend/keygen/struct.MultiStarkKeygenBuilder.html\" title=\"struct openvm_stark_backend::keygen::MultiStarkKeygenBuilder\">MultiStarkKeygenBuilder</a>&lt;'_, SC&gt;,\n    air_proof_inputs: &amp;[<a class=\"struct\" href=\"openvm_stark_backend/prover/types/struct.AirProofInput.html\" title=\"struct openvm_stark_backend::prover::types::AirProofInput\">AirProofInput</a>&lt;SC&gt;],\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Add AIRs and get AIR IDs</div></details><section id=\"method.prove_then_verify\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openvm_stark_backend/engine.rs.html#107-111\">Source</a><a href=\"#method.prove_then_verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"openvm_stark_sdk/engine/trait.StarkEngine.html#method.prove_then_verify\" class=\"fn\">prove_then_verify</a>(\n    &amp;self,\n    pk: &amp;<a class=\"struct\" href=\"openvm_stark_backend/keygen/types/struct.MultiStarkProvingKey.html\" title=\"struct openvm_stark_backend::keygen::types::MultiStarkProvingKey\">MultiStarkProvingKey</a>&lt;SC&gt;,\n    proof_input: <a class=\"struct\" href=\"openvm_stark_backend/prover/types/struct.ProofInput.html\" title=\"struct openvm_stark_backend::prover::types::ProofInput\">ProofInput</a>&lt;SC&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"openvm_stark_backend/verifier/error/enum.VerificationError.html\" title=\"enum openvm_stark_backend::verifier::error::VerificationError\">VerificationError</a>&gt;</h4></section><section id=\"method.prove\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openvm_stark_backend/engine.rs.html#116\">Source</a><a href=\"#method.prove\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"openvm_stark_sdk/engine/trait.StarkEngine.html#method.prove\" class=\"fn\">prove</a>(\n    &amp;self,\n    pk: &amp;<a class=\"struct\" href=\"openvm_stark_backend/keygen/types/struct.MultiStarkProvingKey.html\" title=\"struct openvm_stark_backend::keygen::types::MultiStarkProvingKey\">MultiStarkProvingKey</a>&lt;SC&gt;,\n    proof_input: <a class=\"struct\" href=\"openvm_stark_backend/prover/types/struct.ProofInput.html\" title=\"struct openvm_stark_backend::prover::types::ProofInput\">ProofInput</a>&lt;SC&gt;,\n) -&gt; <a class=\"struct\" href=\"openvm_stark_backend/prover/types/struct.Proof.html\" title=\"struct openvm_stark_backend::prover::types::Proof\">Proof</a>&lt;SC&gt;</h4></section><section id=\"method.verify\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openvm_stark_backend/engine.rs.html#159-163\">Source</a><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"openvm_stark_sdk/engine/trait.StarkEngine.html#method.verify\" class=\"fn\">verify</a>(\n    &amp;self,\n    vk: &amp;<a class=\"struct\" href=\"openvm_stark_backend/keygen/types/struct.MultiStarkVerifyingKey.html\" title=\"struct openvm_stark_backend::keygen::types::MultiStarkVerifyingKey\">MultiStarkVerifyingKey</a>&lt;SC&gt;,\n    proof: &amp;<a class=\"struct\" href=\"openvm_stark_backend/prover/types/struct.Proof.html\" title=\"struct openvm_stark_backend::prover::types::Proof\">Proof</a>&lt;SC&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"openvm_stark_backend/verifier/error/enum.VerificationError.html\" title=\"enum openvm_stark_backend::verifier::error::VerificationError\">VerificationError</a>&gt;</h4></section></div></details>","StarkEngine<StarkConfig<TwoAdicFriPcs<MontyField31<BabyBearParameters>, Radix2DitParallel<MontyField31<BabyBearParameters>>, MerkleTreeMmcs<<MontyField31<BabyBearParameters> as Field>::Packing, <MontyField31<BabyBearParameters> as Field>::Packing, PaddingFreeSponge<P, WIDTH, RATE, DIGEST_WIDTH>, TruncatedPermutation<P, 2, DIGEST_WIDTH, WIDTH>, DIGEST_WIDTH>, ExtensionMmcs<MontyField31<BabyBearParameters>, BinomialExtensionField<MontyField31<BabyBearParameters>, 4>, MerkleTreeMmcs<<MontyField31<BabyBearParameters> as Field>::Packing, <MontyField31<BabyBearParameters> as Field>::Packing, PaddingFreeSponge<P, WIDTH, RATE, DIGEST_WIDTH>, TruncatedPermutation<P, 2, DIGEST_WIDTH, WIDTH>, DIGEST_WIDTH>>>, StarkLogUpPhase<MontyField31<BabyBearParameters>, BinomialExtensionField<MontyField31<BabyBearParameters>, 4>, DuplexChallenger<MontyField31<BabyBearParameters>, P, WIDTH, RATE>>, BinomialExtensionField<MontyField31<BabyBearParameters>, 4>, DuplexChallenger<MontyField31<BabyBearParameters>, P, WIDTH, RATE>>>","openvm_stark_sdk::config::baby_bear_poseidon2::BabyBearPoseidon2Engine"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[20419]}